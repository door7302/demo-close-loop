# =========================
# StackStorm WebUI HTTPS Template
# =========================

# Redirect HTTP -> HTTPS
server {
    listen 80 default_server;
    server_tokens off;

    add_header Front-End-Https on;
    add_header X-Content-Type-Options nosniff;

    if ($ssl_protocol = "") {
        return 308 https://$host$request_uri;
    }

    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
        return 405;
    }

    index index.html;
    access_log /proc/self/fd/1 combined;
    error_log stderr;
}

# HTTPS server
server {
    listen 443 ssl;
    server_tokens off;

    index index.html;

    ssl_certificate     /etc/ssl/st2/st2.crt;
    ssl_certificate_key /etc/ssl/st2/st2.key;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    access_log /proc/self/fd/1 combined;
    error_log stderr;

    add_header Front-End-Https on;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY always;
    add_header Strict-Transport-Security "max-age=3153600;includeSubDomains";
    add_header X-XSS-Protection "0";

    # -----------------
    # API Proxy
    # -----------------
    location @apiError {
        add_header Content-Type application/json always;
        return 503 '{ "faultstring": "Nginx is unable to reach st2api. Make sure service is running." }';
    }

    location /api/ {
        error_page 502 = @apiError;
        rewrite ^/api/(.*) /$1 break;
        proxy_pass            ${ST2_API_URL};
        proxy_read_timeout    90;
        proxy_connect_timeout 90;
        proxy_redirect        off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;
    }

    # -----------------
    # Stream Proxy
    # -----------------
    location @streamError {
        add_header Content-Type text/event-stream;
        return 200 "retry: 1000\n\n";
    }

    rewrite ^/api/stream/?$ /stream/v1/stream break;
    rewrite ^/api/(v\d)/stream/?$ /stream/$1/stream break;

    location /stream/ {
        error_page 502 = @streamError;
        rewrite ^/stream/(.*) /$1 break;
        proxy_pass ${ST2_STREAM_URL};
        proxy_read_timeout 200;
        proxy_connect_timeout 200;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
    }

    # -----------------
    # Auth Proxy
    # -----------------
    location @authError {
        add_header Content-Type application/json always;
        return 503 '{ "faultstring": "Nginx is unable to reach st2auth. Make sure service is running." }';
    }

    location /auth/ {
        error_page 502 = @authError;
        rewrite ^/auth/(.*) /$1 break;
        proxy_pass ${ST2_AUTH_URL};
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-User $remote_user;
        proxy_pass_header Authorization;

        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;
    }

    # -----------------
    # Static WebUI
    # -----------------
    location / {
        root /opt/stackstorm/static/webui/;
        index index.html;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        max_ranges 0;
    }
}
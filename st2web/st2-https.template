# st2-https-safe.template

server {
    listen 80 default_server;
    server_tokens off;

    # Redirect all HTTP to HTTPS
    add_header Front-End-Https on;
    add_header X-Content-Type-Options nosniff;

    if ($ssl_protocol = "") {
        return 308 https://$host$request_uri;
    }

    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
        return 405;
    }

    index index.html;
    access_log /proc/self/fd/1 combined;
    error_log stderr;
}

server {
    listen 443 ssl;
    server_tokens off;

    ssl_certificate /etc/ssl/st2/st2.crt;
    ssl_certificate_key /etc/ssl/st2/st2.key;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    index index.html;
    access_log /proc/self/fd/1 combined;
    error_log stderr;

    add_header Front-End-Https on;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY always;
    add_header Strict-Transport-Security "max-age=3153600;includeSubDomains";
    add_header X-XSS-Protection "0";

    root /opt/stackstorm/static/webui/;
    index index.html;

    location / {
        try_files $uri /index.html;
    }

    # API proxy - don't fail container if backend 404/502
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass ${ST2_API_URL};
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;

        # Custom fallback to avoid container crash
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    location /auth/ {
        rewrite ^/auth/(.*) /$1 break;
        proxy_pass ${ST2_AUTH_URL};
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-User $remote_user;
        proxy_pass_header Authorization;

        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;

        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    location /stream/ {
        rewrite ^/stream/(.*) /$1 break;
        proxy_pass ${ST2_STREAM_URL};
        proxy_read_timeout 200;
        proxy_connect_timeout 200;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        max_ranges 0;

        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
}